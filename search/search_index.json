{"config":{"lang":["ko"],"separator":"[\\s\\-]+","pipeline":[" "]},"docs":[{"location":"","title":"\ud83c\udfe0 \ud648","text":"<ul> <li>\ud83c\udf7a \uc54c\ucf54\uc62c</li> <li>\ud83d\udeac \ub2c8\ucf54\ud2f4</li> <li>\ud83d\udc0d \ud30c\uc774\uc36c</li> <li>\uadf8\ub9ac\uace0 \uc544\ub0b4\ub97c \uc0ac\ub791\ud558\ub294 \uac1c\ubc1c\uc790</li> </ul>"},{"location":"blog/","title":"\ube14\ub85c\uadf8","text":""},{"location":"blog/2024/10/10/%EB%A6%AC%ED%8A%B8%EC%BD%94%EB%93%9C-%ED%92%80%EC%9D%B4/","title":"\ub9ac\ud2b8\ucf54\ub4dc \ud480\uc774","text":"","tags":["\ub9ac\ud2b8\ucf54\ub4dc"]},{"location":"blog/2024/10/10/%EB%A6%AC%ED%8A%B8%EC%BD%94%EB%93%9C-%ED%92%80%EC%9D%B4/#_2","title":"\uba38\ub9bf\ub9d0","text":"<p>\uc774 \ubb38\uc11c\ub294 \ub9ac\ud2b8\ucf54\ub4dc \ubb38\uc81c\ub97c \ud480\uace0 \ud480\uc774\ub97c \uc815\ub9ac\ud55c \ubb38\uc11c\uc785\ub2c8\ub2e4. \ubaa8\ub4e0 \ubb38\uc81c\ub294 \ud30c\uc774\uc36c\uc73c\ub85c \ud480\uc774\ud558\uba70, \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc791\uc131\ud558\uc5ec \uac80\uc99d\ud569\ub2c8\ub2e4.</p> <p>\ud480\uc774\ub294 \ubc15\uc0c1\uae38, \"\ud30c\uc774\uc36c \uc54c\uace0\ub9ac\uc998 \uc778\ud130\ubdf0\", \ucc45\ub9cc(2020) \ucc45\uc744 \ucc38\uace0\ud558\uc5ec \uc791\uc131\ud558\uc600\uc2b5\ub2c8\ub2e4.</p> <p>\uac1c\uc778\uc801\uc73c\ub85c \uc815\ub9ac\ud558\ub294 \ud3ec\uc2a4\ud305\uc774\ubbc0\ub85c \uac1c\uc778\uc801\uc778 \ud480\uc774\ub098 \ucee4\ud2b8\ud140\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \ubaa8\ub4e0 \ud480\uc774\ub97c \uc4f0\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4. \uc9c1\uc811 \ucc45\uc744 \uad6c\ub9e4\ud558\uc2dc\uae38 \uac15\ub825 \ucd94\ucc9c\ud569\ub2c8\ub2e4. \uc624\ub7ab\ub3d9\uc548 \uc54c\uace0\ub9ac\uc998\uc744 \uc78a\uace0 \uc9c0\ub0c8\ub294\ub370 \uc774 \ucc45\uc744 \ubcf4\uace0 \ub2e4\uc2dc \uacf5\ubd80\ud558\ub2c8 \uce5c\uc808\ud55c \uc124\uba85\uacfc \uadf8\ub9bc \ub355\ubd84\uc5d0 \uc774\ud574\uac00 \uc798 \ub418\uc5b4 \uc815\ub9d0 \uc88b\uc558\uc2b5\ub2c8\ub2e4.</p> <p>\ucde8\uc5c5\uc900\ube44\uc0dd \ubfd0\ub9cc \uc544\ub2c8\ub77c, \uc800\ucc98\ub7fc \ud55c\ub3d9\uc548 \uc54c\uace0\ub9ac\uc998\uc744 \ub193\uace0 \uc9c0\ub0b4\uc2e0 \ubd84\ub4e4 \ubaa8\ub450\uc5d0\uac8c \ucd94\ucc9c\ud569\ub2c8\ub2e4.</p>","tags":["\ub9ac\ud2b8\ucf54\ub4dc"]},{"location":"blog/2024/10/10/%EB%A6%AC%ED%8A%B8%EC%BD%94%EB%93%9C-%ED%92%80%EC%9D%B4/#_3","title":"\ud14c\uc2a4\ud2b8 \ucf54\ub4dc","text":"<p>\uac01 \ubb38\uc81c \ud480\uc774\ub9c8\ub2e4 \uc544\ub798\uc640 \uac19\uc774 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc791\uc131\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798\uc758 \ubc15\uc2a4\ub97c \ud074\ub9ad\ud558\uba74 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uac00 \ud3bc\uccd0\uc9d1\ub2c8\ub2e4.</p> \ud14c\uc2a4\ud2b8 \ucf54\ub4dc <p>\ubaa8\ub4e0 \ucf54\ub4dc\ub294 \ubcf5\uc0ac \ud6c4 \ubd99\uc5ec\ub123\uae30 \uc2dc \ubc14\ub85c \uc2e4\ud589 \uac00\ub2a5\ud569\ub2c8\ub2e4. <pre><code>import pytest\n\n# \ud480\uc774 \ucf54\ub4dc \ubc0f \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\n</code></pre></p> <p>\uc704\uc640 \uac19\uc740 \ucf54\ub4dc\uac00 \uc788\uace0 \uc2e4\ud589\uc740</p> <pre><code>pytest\n# \ub610\ub294\npytest \ud30c\uc77c\uba85.py\n</code></pre> <p>\uba85\ub839\uc5b4\ub85c \uc2e4\ud589\ud569\ub2c8\ub2e4.</p> <p>\ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub294 <code>pytest</code>\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc5c6\ub2e4\uba74 \uc544\ub798 \ub3c4\uad6c \uc911 \ud558\ub098\ub97c \uc774\uc6a9\ud558\uc5ec \uc124\uce58\ud558\uc138\uc694.</p> pippoetryuv <pre><code>pip install pytest\n</code></pre> <pre><code>poetry add pytest\n</code></pre> <pre><code>uv add pytest\n# \ub610\ub294 \uc124\uce58 \uc5c6\uc774 \ubc14\ub85c \uc2e4\ud589\ud558\ub824\uba74\nuvx pytest\n</code></pre>","tags":["\ub9ac\ud2b8\ucf54\ub4dc"]},{"location":"blog/2024/10/28/121-%EC%A3%BC%EC%8B%9D%EC%9D%84-%EC%82%AC%EA%B3%A0-%ED%8C%94%EA%B8%B0-%EA%B0%80%EC%9E%A5-%EC%A2%8B%EC%9D%80-%EB%95%8C/","title":"121. \uc8fc\uc2dd\uc744 \uc0ac\uace0 \ud314\uae30 \uac00\uc7a5 \uc88b\uc740 \ub54c","text":"","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\uce74\ub370\uc778"]},{"location":"blog/2024/10/28/121-%EC%A3%BC%EC%8B%9D%EC%9D%84-%EC%82%AC%EA%B3%A0-%ED%8C%94%EA%B8%B0-%EA%B0%80%EC%9E%A5-%EC%A2%8B%EC%9D%80-%EB%95%8C/#_1","title":"\ubb38\uc81c","text":"<p>\ub9ac\ud2b8\ucf54\ub4dc 121\ubc88 \ubb38\uc81c\uc785\ub2c8\ub2e4.</p> <p><code>i</code>\ubc88\uc9f8 \ub0a0\uc758 \uc8fc\uc2dd\uac00\uac00 \uc788\ub294 <code>prices</code> \ub9ac\uc2a4\ud2b8\ub97c \ubc1b\uc544 \ucd5c\ub300 \uc774\uc775\uc744 \uad6c\ud558\ub294 \ubb38\uc81c\uc785\ub2c8\ub2e4.</p> <p>\uc6cc\ub80c \ubc84\ud54f\uc758 \uc720\uba85\ud55c \ub9d0\uc744 \uc54c\uace0\ub9ac\uc998\uc73c\ub85c \uad6c\ud604\ud558\uba74 \ub429\ub2c8\ub2e4.</p> <p>Buy the fear, sell the greed</p> <p>\uc6cc\ub80c \ubc84\ud54f</p> <p>\uc300 \ub54c \uc0ac\uc11c \ube44\uc300\ub54c \ud30c\ub294\uac8c \uc544\ub2cc\uac70 \uac19\uc740\ub370?</p>","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\uce74\ub370\uc778"]},{"location":"blog/2024/10/28/121-%EC%A3%BC%EC%8B%9D%EC%9D%84-%EC%82%AC%EA%B3%A0-%ED%8C%94%EA%B8%B0-%EA%B0%80%EC%9E%A5-%EC%A2%8B%EC%9D%80-%EB%95%8C/#_2","title":"\ud480\uc774","text":"<p><code>profit</code>\uc744 \ucd5c\ub300\ub85c \uc7a1\uc544\uc57c\ud558\ub294\ub370, \uadf8\ub7f4 \uc218 \uc5c6\ub2e4\uba74 \ubb38\uc81c\uc5d0\uc11c 0\uc744 \ubc18\ud658\ud558\ub77c \ub418\uc5b4\uc788\uc2b5\ub2c8\ub2e4.</p> <p><code>profit</code>\uc744 <code>0</code>\uc73c\ub85c, <code>min_price</code>\ub97c \ubb34\ud55c\uc73c\ub85c \uc120\uc5b8\ud558\uace0 \ub9ac\uc2a4\ud2b8\ub97c \ud0d0\uc0c9\ud558\uba74\uc11c \ucd5c\uc800\uac00\ub97c \ucc3e\uc544 \ub123\uc73c\uba74 \ub429\ub2c8\ub2e4.</p> <pre><code>class Solution:\n    def maxProfit(self, prices: list[int]) -&gt; int:\n        profit = 0\n        min_price = float('inf')\n\n        for price in prices:\n            min_price = min(min_price, price)\n            profit = max(profit, price - min_price)\n        return profit\n</code></pre> <p>\ubb34\ud55c\ub300</p> <p>\ucd5c\uc18c, \ucd5c\ub300\ub97c \ube44\uad50\ud560 \ub54c \ubb34\ud55c\ub300\ub97c \ud65c\uc6a9\ud558\uba74 \ud3b8\ud569\ub2c8\ub2e4. <code>None</code>\uc744 \uc0ac\uc6a9\ud560 \uacbd\uc6b0 \ud0c0\uc785 \uc5d0\ub7ec\uac00 \ub0a0 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ub294 \uc784\uc758\ub85c 999,999,999\uc640 \uac19\uc774 \ud560 \uacbd\uc6b0 \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\uac00 \uc774\ubcf4\ub2e4 \ud074 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubb34\ud55c\uc744 \uc120\uc5b8\ud558\ub294 \ubc29\ubc95\uc740 <code>math.inf</code>, <code>float(\"inf\")</code>, <code>Decimal(\"inf\")</code> \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\ucc45\uc5d0\uc11c\ub294 <code>sys.maxsize</code>\ub97c \ud65c\uc6a9\ud574 \uc2dc\uc2a4\ud15c \uc0c1 \uac00\uc7a5 \ud070 \uc218\ub97c \uc774\uc6a9\ud574 \ube44\uad50\ud569\ub2c8\ub2e4.</p> \ud14c\uc2a4\ud2b8 \ucf54\ub4dc <pre><code>import pytest\n\n\nclass Solution:\n    def maxProfit(self, prices: list[int]) -&gt; int:\n        profit = 0\n        min_price = float(\"inf\")\n\n        for price in prices:\n            min_price = min(min_price, price)\n            profit = max(profit, price - min_price)\n        return profit\n\n\n@pytest.mark.parametrize(\n    \"prices, expected\",\n    [\n        ([7, 1, 5, 3, 6, 4], 5),\n        ([7, 6, 4, 3, 1], 0),\n    ],\n)\ndef test_solution(prices, expected):\n    solution = Solution()\n    assert solution.maxProfit(prices) == expected\n</code></pre>","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\uce74\ub370\uc778"]},{"location":"blog/2024/10/28/121-%EC%A3%BC%EC%8B%9D%EC%9D%84-%EC%82%AC%EA%B3%A0-%ED%8C%94%EA%B8%B0-%EA%B0%80%EC%9E%A5-%EC%A2%8B%EC%9D%80-%EB%95%8C/#_3","title":"\uc2dc\uac04 \ubcf5\uc7a1\ub3c4","text":"<p>\ub2e8\uc21c\ud788 \ud55c \ubc88\ub9cc \ud0d0\uc0c9\ud558\ubbc0\ub85c \uc2dc\uac04 \ubcf5\uc7a1\ub3c4\ub294 \\(O(n)\\)\uc785\ub2c8\ub2e4.</p>","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\uce74\ub370\uc778"]},{"location":"blog/2024/10/13/125-%EC%9C%A0%ED%9A%A8%ED%95%9C-%ED%9A%8C%EB%AC%B8/","title":"125. \uc720\ud6a8\ud55c \ud68c\ubb38","text":"","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\ud68c\ubb38"]},{"location":"blog/2024/10/13/125-%EC%9C%A0%ED%9A%A8%ED%95%9C-%ED%9A%8C%EB%AC%B8/#_1","title":"\ubb38\uc81c","text":"<p>\ub9ac\ud2b8\ucf54\ub4dc 125\ubc88 \ubb38\uc81c\uc785\ub2c8\ub2e4.</p> <p>\ubb38\uc790\uc5f4\uc774 \uc8fc\uc5b4\uc84c\uc744 \ub54c, \uc774 \ubb38\uc790\uc5f4\uc774 \ud68c\ubb38(palindrome)\uc778\uc9c0 \ud655\uc778\ud558\ub294 \ubb38\uc81c\uc785\ub2c8\ub2e4.  \ub300\uc18c\ubb38\uc790\ub97c \uad6c\ubd84\ud558\uc9c0 \uc54a\uc73c\uba70, \uc601\ubb38\uc790\uc640 \uc22b\uc790\ub9cc\uc744 \ub300\uc0c1\uc73c\ub85c \ud569\ub2c8\ub2e4.</p> <p>\ubb38\uc790\uc5f4 <code>s</code>\uac00 \uc8fc\uc5b4\uc84c\uc744 \ub54c, \ud68c\ubb38\uc774\uba74 <code>true</code>\ub97c \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 <code>false</code>\ub97c \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4.</p>","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\ud68c\ubb38"]},{"location":"blog/2024/10/13/125-%EC%9C%A0%ED%9A%A8%ED%95%9C-%ED%9A%8C%EB%AC%B8/#_2","title":"\ud480\uc774","text":"<p>\ud30c\uc774\uc368\ub2c8\uc2a4\ud0c0\ub77c\uba74 \uc9c1\uad00\uc801\uc73c\ub85c <code>reversed()</code>\ub098 \uc2ac\ub77c\uc774\uc2f1\uc744 \ub5a0\uc62c\ub838\uc744 \uac81\ub2c8\ub2e4.  \uc601\ubb38\uc790 + \uc22b\uc790 \uc870\ud569\ub9cc \ud5c8\uc6a9\ud558\ubbc0\ub85c <code>str.isalnum()</code> \uba54\uc18c\ub4dc\uc640 \ub9ac\uc2a4\ud2b8 \ucef4\ud504\ub9ac\ud5e8\uc158\uc73c\ub85c \ubb38\uc790\uc5f4\uc744 \ubcc0\ud658\ud569\ub2c8\ub2e4.</p> <pre><code>class Solution:\n    def isPalindrome(self, s: str) -&gt; bool:\n        s = [c.lower() for c in s if c.isalnum()]\n        return s == s[::-1]\n</code></pre> \ud14c\uc2a4\ud2b8 \ucf54\ub4dc <pre><code>import pytest\n\nclass Solution:\n    def isPalindrome(self, s: str) -&gt; bool:\n        s = [c.lower() for c in s if c.isalnum()]\n        return s == s[::-1]\n\n\n@pytest.mark.parametrize(\n    \"s, expected\",\n    [\n        (\"A man, a plan, a canal: Panama\", True),\n        (\"race a car\", False),\n        (\" \", True),\n    ],\n)\ndef test_solution(s, expected):\n    solution = Solution()\n\n    assert solution.isPalindrome(s) is expected\n</code></pre> <p>\uc2dc\uac04 \ubcf5\uc7a1\ub3c4\ub294 \\(O(n)\\)\uc785\ub2c8\ub2e4.</p> <p>\uc18d\ub3c4 \uac1c\uc120 \ud301</p> <p>\ubb38\uc790\uc5f4\uc744 \ub9ac\uc2a4\ud2b8\ub85c \ubcc0\ud658\ud558\uc9c0 \uc54a\uace0, \uc778\ub371\uc2a4\ub85c \uc811\uadfc\ud558\uc5ec \ube44\uad50\ud558\uba74 \uc18d\ub3c4\ub97c \ub354 \ub192\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2ac\ub77c\uc774\uc2f1\uc740 \ub0b4\ubd80\uc801\uc73c\ub85c \ud3ec\uc778\ud130\ub97c \uc774\uc6a9\ud558\uc5ec \ube60\ub974\uac8c \ucc98\ub9ac\ud558\uae30 \ub54c\ubb38\uc5d0 \ub9ac\uc2a4\ud2b8\ub97c \ub2e4\ub8e8\ub294 \ubb38\uc81c\uc5d0\uc11c\ub294 \uc2ac\ub77c\uc774\uc2f1\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.</p>","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\ud68c\ubb38"]},{"location":"blog/2024/11/09/3-%EC%A4%91%EB%B3%B5-%EB%AC%B8%EC%9E%90-%EC%97%86%EB%8A%94-%EA%B0%80%EC%9E%A5-%EA%B8%B4-%EB%B6%80%EB%B6%84-%EB%AC%B8%EC%9E%90%EC%97%B4/","title":"3. \uc911\ubcf5 \ubb38\uc790 \uc5c6\ub294 \uac00\uc7a5 \uae34 \ubd80\ubd84 \ubb38\uc790\uc5f4","text":"","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\ubb38\uc790\uc5f4"]},{"location":"blog/2024/11/09/3-%EC%A4%91%EB%B3%B5-%EB%AC%B8%EC%9E%90-%EC%97%86%EB%8A%94-%EA%B0%80%EC%9E%A5-%EA%B8%B4-%EB%B6%80%EB%B6%84-%EB%AC%B8%EC%9E%90%EC%97%B4/#_1","title":"\ubb38\uc81c","text":"<p>\ub9ac\ud2b8\ucf54\ub4dc 3\ubc88 \ubb38\uc81c\uc785\ub2c8\ub2e4.</p> <p>\ubb38\uc790\uc5f4 <code>s</code>\uac00 \uc8fc\uc5b4\uc84c\uc744 \ub54c, \uc911\ubcf5 \ubb38\uc790\uac00 \uc5c6\ub294 \uac00\uc7a5 \uae34 \ubd80\ubd84 \ubb38\uc790\uc5f4\uc744 \uad6c\ud558\ub294 \ubb38\uc81c\uc785\ub2c8\ub2e4. \uc751\ub2f5\uc740 \ubd80\ubd84 \ubb38\uc790\uc5f4\uc774 \uc544\ub2cc \ubd80\ubd84 \ubb38\uc790\uc5f4\uc758 \ud06c\uae30\ub97c \ubc18\ud658\ud558\uba74 \ub429\ub2c8\ub2e4.</p> <p>\uc5ec\uae30\uc11c \ubd80\ubd84 \ubb38\uc790\uc5f4(substring)\uc774\ub780, \ubb38\uc790\uc5f4\uc758 \uc5f0\uc18d\ud55c \uc5b4\ub5a4 \ubd80\ubd84\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, <code>pwwkew</code>\uc5d0\uc11c <code>pwke</code>\ub294 \uc911\ubcf5 \uc5c6\ub294 \uac00\uc7a5 \uae34 \ubd80\ubd84 \uc2dc\ud000\uc2a4(subsequence)\uc774\uace0, <code>wke</code>\uac00 \uac00\uc7a5 \uae34 \ubd80\ubd84 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4.</p>","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\ubb38\uc790\uc5f4"]},{"location":"blog/2024/11/09/3-%EC%A4%91%EB%B3%B5-%EB%AC%B8%EC%9E%90-%EC%97%86%EB%8A%94-%EA%B0%80%EC%9E%A5-%EA%B8%B4-%EB%B6%80%EB%B6%84-%EB%AC%B8%EC%9E%90%EC%97%B4/#_2","title":"\ud480\uc774","text":"<p>\uc21c\ucc28\uc801\uc73c\ub85c \uc9c4\ud589\ud558\uba74\uc11c \ubd80\ubd84 \ubb38\uc790\uc5f4\uc758 \ucd5c\ub300 \uae38\uc774\ub97c \uad6c\ud558\uace0, \uc0c8\ub85c\uc6b4 \ubb38\uc790\uac00 \ub4f1\uc7a5\ud558\uba74 \ubd80\ubd84 \ubb38\uc790\uc5f4\uc744 \ub2e4\uc2dc \uc2dc\uc791\ud558\uba74 \ub420 \uac70 \uac19\uc2b5\ub2c8\ub2e4.</p> <p>\ucc45\uc5d0 \uc788\ub294 \uadf8\ub9bc(11-10)\uc744 \ud45c\ud604 \ud574\ubcf4\uba74,</p> <p><pre><code>s = | a | b | c | a | b | c | b | b |\n    |--&gt;|   |   |   |   |   |   |   |\n    | 1 |   |   |   |   |   |   |   |\n    |---|--&gt;|   |   |   |   |   |   |\n    |   | 2 |   |   |   |   |   |   |\n    |---|---|--&gt;|   |   |   |   |   |\n        |   | 3 |   |   |   |   |   |\n        |---|---|--&gt;|   |   |   |   |\n            |   | 3 |   |   |   |   |\n            |---|---|--&gt;|   |   |   |\n                |   | 3 |   |   |   |\n                |---|---|--&gt;|   |   |\n                        | 3 |   |   |\n                        |---|--&gt;|   |\n                            | 2 |   |\n                            |---|--&gt;|\n                                | 1 |\n</code></pre> \ud654\uc0b4\ud45c \ub05d \uc740 \uadf8\uc800 \uc21c\ucc28\uc801\uc73c\ub85c \uc9c4\ud589\ud569\ub2c8\ub2e4. \ud55c \uce78 \uc804\uc9c4 \ud560 \ub54c\ub9c8\ub2e4 \ucd5c\ub300 \uae38\uc774(<code>max_len</code>)\uc744 \uad6c\ud574\uc90d\ub2c8\ub2e4.</p> <p>\ub9cc\uc57d \uae30\uc874\uc5d0 \ubd24\ub358 \ubb38\uc790\uac00 \ub2e4\uc2dc \ub4f1\uc7a5\ud558\uba74 \ud654\uc0b4\ud45c\uc758 \uc2dc\uc791(<code>start</code>\ub77c\uace0 \ud569\uc2dc\ub2e4)\uc744 \ud55c \uce78 \uc804\uc9c4 \ud569\ub2c8\ub2e4.</p> <p><code>start = \ubd24\ub358 \ubb38\uc790 \uc704\uce58 + 1</code>\uc774 \ub429\ub2c8\ub2e4.</p> <p>\uc5ec\uae30\uc11c \ud654\uc0b4\ud45c\ub294 \ubcf4\ud1b5 \uc708\ub3c4\uc6b0(window)\ub77c\uace0 \ubd80\ub974\uace0, \ubbf8\ub044\ub7ec\uc9c0\uba74\uc11c(sliding) \uc774\ub3d9\ud558\uae30 \ub54c\ubb38\uc5d0 \uc2ac\ub77c\uc774\ub529 \uc708\ub3c4\uc6b0\ub77c \ubd80\ub985\ub2c8\ub2e4.</p> <p>\uc704\uce58\uac00 \uac31\uc2e0\ub418\uc5c8\uae30 \ub54c\ubb38\uc5d0 \ucd5c\ub300 \uae38\uc774\ub97c \ub2e4\uc2dc \uad6c\ud560 \ud544\uc694 \uc5c6\uc2b5\ub2c8\ub2e4. \uc544\ub798\ub294 \uad6c\ud604 \ucf54\ub4dc\uc785\ub2c8\ub2e4.</p> <pre><code>class Solution:\n    def lengthOfLongestSubstring(self, s: str) -&gt; int:\n        seen = {}\n        max_len = start = 0\n\n        for i, c in enumerate(s):\n            # \ubb38\uc790(c)\ub97c \uc804\uc5d0 \ubd24\ub2e4\uba74, start\ub97c \ubd24\ub358 \ubb38\uc790\uc5d0\uc11c \ud55c \uce78 \uc804\uc9c4\ud558\uc5ec \uc0c8\ub85c\uc6b4 \ubd80\ubd84 \ubb38\uc790\uc5f4 \uc2dc\uc791\n            if c in seen:\n                start = seen[c] + 1\n            else:\n                max_len = max(max_len, i - start + 1)\n\n            # \ubd24\ub358 \ubb38\uc790\uc758 \uc704\uce58\ub97c \uae30\ub85d\ud569\ub2c8\ub2e4.\n            seen[c] = i\n\n        return max_len\n</code></pre> <p>\uadf8\ub7f0\ub370 \ub9ac\ud2b8\ucf54\ub4dc\uc5d0 \uc81c\ucd9c\ud558\uba74 \ub2e4\uc74c \ucf00\uc774\uc2a4\uc5d0\uc11c \uc2e4\ud328\ud569\ub2c8\ub2e4.</p> <pre><code>s = \"tmmzuxt\"\n</code></pre> <p>\uc65c\ub0d0\ud558\uba74, \ubd24\ub358 \ubb38\uc790(\uc5ec\uae30\uc11c\ub294 <code>t</code>)\uac00 \ub9c8\uc9c0\ub9c9\uc5d0 \uc788\uc744\ub54c <code>else</code>\ubb38\uc744 \uc548 \ud0c0\uace0 <code>if</code>\ubb38\uc744 \ud0c0\uc11c \ucd5c\ub313\uac12\uc744 \uc548 \uad6c\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. <code>mzuxt</code>\uac00 \ub418\uc5b4\uc57c\ud558\ub294\ub370 <code>t</code>\uac00 \uc7ac\ub4f1\uc7a5\ud574 <code>mzux</code>\uac00 \ub418\uace0 <code>for</code> \ub8e8\ud504\uac00 \ub05d\ub098 \uc885\ub8cc\ub429\ub2c8\ub2e4. </p> <p>\ub2e4\ub978 \ub9d0\ub85c \uc708\ub3c4\uc6b0 \ubc16\uc5d0 \uc788\ub294 \ubb38\uc790\ub294 \uc608\uc804\uc5d0 \ubd24\ub354\ub77c\ub3c4 \ubb34\uc2dc\ud574\uc57c \ud569\ub2c8\ub2e4. <code>if</code>\uc5d0 <code>start &lt;= seen[c]</code> \uc870\uac74\uc744 \ucd94\uac00\ud574 \ucf54\ub4dc\ub97c \uc644\uc131\ud569\uc2dc\ub2e4.</p> <pre><code>class Solution:\n    def lengthOfLongestSubstring(self, s: str) -&gt; int:\n        seen = {}\n        max_len = start = 0\n\n        for i, c in enumerate(s):\n            if c in seen and start &lt;= seen[c]:\n                start = seen[c] + 1\n            else:\n                max_len = max(max_len, i - start + 1)\n\n            seen[c] = i\n\n        return max_len\n</code></pre> \ud14c\uc2a4\ud2b8 \ucf54\ub4dc <pre><code>import pytest\n\n\nclass Solution:\n    def lengthOfLongestSubstring(self, s: str) -&gt; int:\n        seen = {}\n        max_len = start = 0\n\n        for i, c in enumerate(s):\n            if c in seen and start &lt;= seen[c]:\n                start = seen[c] + 1\n            else:\n                max_len = max(max_len, i - start + 1)\n\n            seen[c] = i\n\n        return max_len\n\n\n@pytest.mark.parametrize(\n    \"s, expected\",\n    [\n        (\"abcabcbb\", 3),  # abc\n        (\"bbbbb\", 1),  # b\n        (\"pwwkew\", 3),  # wke\n        (\"tmmzuxt\", 5),  # mzuxt\n    ],\n)\ndef test_solution(s, expected):\n    solution = Solution()\n    assert solution.lengthOfLongestSubstring(s) == expected\n</code></pre> <p>\uc2dc\uac04 \ubcf5\uc7a1\ub3c4\ub294 \uc21c\ucc28\ud0d0\uc0c9\ub9cc \ud588\uc73c\ubbc0\ub85c \\(O(n)\\)\uc785\ub2c8\ub2e4.</p>","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\ubb38\uc790\uc5f4"]},{"location":"blog/2024/11/09/3-%EC%A4%91%EB%B3%B5-%EB%AC%B8%EC%9E%90-%EC%97%86%EB%8A%94-%EA%B0%80%EC%9E%A5-%EA%B8%B4-%EB%B6%80%EB%B6%84-%EB%AC%B8%EC%9E%90%EC%97%B4/#_3","title":"\ub2e4\ub978 \ud480\uc774","text":"<p>\ub354 \uc9c1\uad00\uc801\uc778 \ubc29\ubc95\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.</p> <pre><code>class Solution:\n    def lengthOfLongestSubstring(self, s: str) -&gt; int:\n        left = max_len = 0\n        char_set = set()\n\n        for right in range(len(s)):\n            while s[right] in char_set:\n                char_set.remove(s[left])\n                left += 1\n\n            char_set.add(s[right])\n            max_len = max(max_len, right - left + 1)\n\n        return max_len\n</code></pre> <p>\ucc38\uace0</p> <p>\ubb38\uc81c\ud480\uc774 \ud560 \ub54c \ud22c \ud3ec\uc778\ud130\ub97c \uc0ac\uc6a9\ud560 \uacbd\uc6b0 <code>left</code>, <code>right</code>\ub77c\ub294 \ubcc0\uc218\uba85\uc744 \uc790\uc8fc \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc190\uc73c\ub85c \uadf8\ub9bc\uc744 \uadf8\ub9b4\ub54c\ub3c4 \uba85\ud655\ud574\uc11c \uc774\ud574\ud558\uae30 \uc27d\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc704\uc5d0\uc11c\ub294 <code>start</code>\uac00 <code>left</code>\uc774\uace0 <code>i</code>\uac00 <code>right</code>\uc785\ub2c8\ub2e4. \uc11c\ub450\uc758 \uadf8\ub9bc\uc744 \ubcf4\uba74\uc11c \ub300\uc785\ud574\ubcf4\uba74 \uc815\ub9d0 \ud3b8\ud569\ub2c8\ub2e4.</p> <p>\uac1c\ub150\uc740 \ud06c\uac8c \ub2e4\ub974\uc9c0 \uc54a\uc9c0\ub9cc, \uc911\ubcf5 \ubb38\uc790\uc5f4\uc744 \uc9d1\ud569\uc73c\ub85c \ub2e4\ub8f9\ub2c8\ub2e4. \ubd80\ubd84 \ubb38\uc790\uc5f4\uc744 \uad6c\ud558\ub294 \ubb38\uc81c\uac00 \uc544\ub2c8\uae30 \ub54c\ubb38\uc5d0 \uc21c\uc11c\uac00 \uc0c1\uad00\uc5c6\uc5b4 \uc9d1\ud569\uc73c\ub85c \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \ubb3c\ub860 \ub9ac\uc2a4\ud2b8\ub85c \ubc14\uafb8\uae30\ub9cc \ud574\ub3c4 \ubd80\ubd84 \ubb38\uc790\uc5f4\ub3c4 \uad6c\ud560 \uc218\ub294 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\uc5ed\uc2dc \uc2dc\uac04 \ubcf5\uc7a1\ub3c4\ub294 \\(O(n)\\)\uc785\ub2c8\ub2e4.</p>","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\ubb38\uc790\uc5f4"]},{"location":"blog/2024/10/23/5-%EA%B0%80%EC%9E%A5-%EA%B8%B4-%ED%9A%8C%EB%AC%B8-%EB%B6%80%EB%B6%84-%EB%AC%B8%EC%9E%90%EC%97%B4/","title":"5. \uac00\uc7a5 \uae34 \ud68c\ubb38 \ubd80\ubd84 \ubb38\uc790\uc5f4","text":"","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\ud68c\ubb38","\ubb38\uc790\uc5f4","\ubd80\ubd84 \ubb38\uc790\uc5f4"]},{"location":"blog/2024/10/23/5-%EA%B0%80%EC%9E%A5-%EA%B8%B4-%ED%9A%8C%EB%AC%B8-%EB%B6%80%EB%B6%84-%EB%AC%B8%EC%9E%90%EC%97%B4/#_1","title":"\ubb38\uc81c","text":"<p>\ub9ac\ud2b8\ucf54\ub4dc 5\ubc88 \ubb38\uc81c\uc785\ub2c8\ub2e4.</p> <p>\uc8fc\uc5b4\uc9c4 \ubb38\uc790\uc5f4\uc5d0\uc11c \uac00\uc7a5 \uae34 \ud68c\ubb38\uc744 \ucc3e\uc544 \ubc18\ud658\ud569\ub2c8\ub2e4.</p>","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\ud68c\ubb38","\ubb38\uc790\uc5f4","\ubd80\ubd84 \ubb38\uc790\uc5f4"]},{"location":"blog/2024/10/23/5-%EA%B0%80%EC%9E%A5-%EA%B8%B4-%ED%9A%8C%EB%AC%B8-%EB%B6%80%EB%B6%84-%EB%AC%B8%EC%9E%90%EC%97%B4/#_2","title":"\ud480\uc774","text":"<p>\ud22c \ud3ec\uc778\ud130\ub97c \ud65c\uc6a9\ud558\uc5ec \ud68c\ubb38\uc744 \ucc3e\uc2b5\ub2c8\ub2e4. \ud68c\ubb38\uc740 \ud640\uc218(\ud3ec\uc778\ud1301)\uc640 \uc9dd\uc218(\ud3ec\uc778\ud1302)\uc758 \uacbd\uc6b0\ub85c \ub098\ub204\uc5b4 \uc0dd\uac01\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud68c\ubb38\uc744 \ucc3e\ub294 \ud568\uc218\ub294 \ud574\ub2f9 \ubb38\uc790\uc5d0\uc11c \uc67c\ucabd, \uc624\ub978\ucabd\uc73c\ub85c \ud655\uc7a5\ud558\ub294 \ud568\uc218\ub97c \ub9cc\ub4e4\uba74 \ub429\ub2c8\ub2e4. \uc544\ub798 \uc608\uc2dc\ub97c \ubcf4\uba74 \uc774\ud574\uac00 \uc870\uae08 \uc218\uc6d4 \ud560 \uac81\ub2c8\ub2e4.</p> <p>\ub9cc\uc57d <code>s</code>\uac00 <code>babad</code>\ub77c\uba74,</p> <ul> <li><code>i = 0</code>: <code>\"b\"abad</code> <ul> <li>\ud640 <ul> <li><code>[b]abad</code> \u2705 </li> </ul> </li> <li>\uc9dd <ul> <li><code>[ba]bad</code> \u274c</li> </ul> </li> </ul> </li> <li><code>i = 1</code>: <code>b\"a\"bad</code> <ul> <li>\ud640 <ul> <li><code>b[a]bad</code> \u2705</li> <li><code>[bab]ad</code> \u2705 \uc815\ub2f5\uc785\ub2c8\ub2e4.</li> </ul> </li> <li>\uc9dd <ul> <li><code>b[ab]ad</code> \u274c</li> </ul> </li> </ul> </li> <li><code>i = 2</code>: <code>ba\"b\"ad</code> <ul> <li>\ud640 <ul> <li><code>ba[b]ad</code> \u2705</li> <li><code>b[aba]d</code> \u2705 \uc5ed\uc2dc \uc815\ub2f5\uc785\ub2c8\ub2e4.</li> <li><code>[babad]</code> \u274c</li> </ul> </li> <li>\uc9dd <ul> <li><code>ba[ba]d</code> \u274c</li> </ul> </li> </ul> </li> <li><code>i = 3</code>: <code>bab\"a\"d</code> <ul> <li>\ud640 <ul> <li><code>bab[a]d</code> \u2705</li> <li><code>ba[bad]</code> \u274c</li> </ul> </li> <li>\uc9dd <ul> <li><code>bab[ad]</code> \u274c</li> </ul> </li> </ul> </li> <li><code>i = 4</code>: <code>baba\"d\"</code>: \uc9dd\uc218\uc77c \uacbd\uc6b0 \uc624\ubc84\ud50c\ub85c\uc6b0\uc774\ubbc0\ub85c \ud328\uc2a4\ud569\ub2c8\ub2e4.</li> </ul> <p>\uc704 \uc608\uc5d0\uc11c\ub294 <code>i</code>\uac00 1\uc77c \ub54c, <code>bab</code>\uc640 2\uc77c \ub54c, <code>aba</code> \uac00 \uac00\uc7a5 \uae41\ub2c8\ub2e4. \ub9ac\ud2b8\ucf54\ub4dc\uc5d0\uc11c\ub294 \ub458 \ubaa8\ub450 \uc815\ub2f5\uc73c\ub85c \ucc98\ub9ac\ud569\ub2c8\ub2e4.</p> <ol> <li>\ud640\uc218, \uc9dd\uc218 \uae38\uc774\uc758 \ud68c\ubb38\uc744 \ucc3e\uc2b5\ub2c8\ub2e4.</li> <li>\ub450 \uacbd\uc6b0 \uc911 \uac00\uc7a5 \uae34 \ud68c\ubb38\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.</li> <li>\ud3ec\uc778\ud130\ub97c \uc624\ub978\ucabd\uc73c\ub85c \uc774\ub3d9\ud569\ub2c8\ub2e4.</li> </ol> <pre><code>class Solution:\n    def longestPalindrome(self, s: str) -&gt; str:\n        # \ud55c \uae00\uc790\ub294 \uc790\uae30 \uc790\uc2e0\uc73c\ub85c \ud68c\ubb38\uc785\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc790\uae30 \uc790\uc2e0\uc744 \ub4a4\uc9d1\uc740\uac8c \uac19\ub2e4\uba74 \uc5ed\uc2dc \ud68c\ubb38\uc785\ub2c8\ub2e4.\n        if len(s) &lt; 2 or s == s[::-1]:\n            return s\n\n        def expand(left: int, right: int) -&gt; str:\n            while left &gt;= 0 and right &lt; len(s) and s[left] == s[right]:\n                left -= 1\n                right += 1\n            return s[left + 1 : right]\n\n        result = \"\"\n        for i in range(len(s) - 1):\n            result = max(result, expand(i, i + 1), expand(i, i + 2), key=len)\n        return result\n</code></pre> <p><code>if</code> \ubb38\uc774 \uc788\ub294 \uc774\uc720\ub294 \ucd5c\uc120, \ucd5c\uc545\uc758 \uacbd\uc6b0 \ubc14\ub85c \uc815\ub2f5\uc744 \uc54c \uc218\ub3c4 \uc788\uc9c0\ub9cc, <code>expand</code> \ud568\uc218\uc5d0\uc11c \uc778\ub371\uc2a4 \uc624\ubc84\ud50c\ub85c\uc6b0\uac00 \ub098\uc9c0 \uc54a\uae30 \uc704\ud568\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.</p> \ud14c\uc2a4\ud2b8 \ucf54\ub4dc <pre><code>import pytest\n\n\nclass Solution:\n    def longestPalindrome(self, s: str) -&gt; str:\n        if len(s) &lt; 2 or s == s[::-1]:\n            return s\n\n        def expand(left: int, right: int) -&gt; str:\n            while left &gt;= 0 and right &lt; len(s) and s[left] == s[right]:\n                left -= 1\n                right += 1\n            return s[left + 1 : right]\n\n        result = \"\"\n        for i in range(len(s) - 1):\n            result = max(result, expand(i, i + 1), expand(i, i + 2), key=len)\n        return result\n\n\n@pytest.mark.parametrize(\n    \"s, expected\",\n    [\n        (\"babad\", \"bab\"),\n        (\"cbbd\", \"bb\"),\n    ],\n)\ndef test_solution(s, expected):\n    solution = Solution()\n    assert solution.longestPalindrome(s) == expected\n</code></pre>","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\ud68c\ubb38","\ubb38\uc790\uc5f4","\ubd80\ubd84 \ubb38\uc790\uc5f4"]},{"location":"blog/2024/10/23/5-%EA%B0%80%EC%9E%A5-%EA%B8%B4-%ED%9A%8C%EB%AC%B8-%EB%B6%80%EB%B6%84-%EB%AC%B8%EC%9E%90%EC%97%B4/#_3","title":"\uc2dc\uac04 \ubcf5\uc7a1\ub3c4","text":"<p><code>expand</code> \ud568\uc218\ub294 \ucd5c\uc545\uc758 \uacbd\uc6b0 \\(O(n)\\)\uc758 \uc2dc\uac04 \ubcf5\uc7a1\ub3c4\ub97c \uac00\uc9d1\ub2c8\ub2e4. \ud574\ub2f9 \ud568\uc218\ub97c \uc774\uc6a9\ud558\uc5ec \uac00\uc7a5 \uae34 \ud68c\ubb38\uc744 \ucc3e\uc73c\ubbc0\ub85c, \uc804\uccb4 \uc2dc\uac04 \ubcf5\uc7a1\ub3c4\ub294 \\(O(n^2)\\)\uc785\ub2c8\ub2e4.</p>","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\ud68c\ubb38","\ubb38\uc790\uc5f4","\ubd80\ubd84 \ubb38\uc790\uc5f4"]},{"location":"blog/2024/10/19/819-%EA%B0%80%EC%9E%A5-%ED%9D%94%ED%95%9C-%EB%8B%A8%EC%96%B4/","title":"819. \uac00\uc7a5 \ud754\ud55c \ub2e8\uc5b4","text":"","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\uce74\uc6b4\ud130"]},{"location":"blog/2024/10/19/819-%EA%B0%80%EC%9E%A5-%ED%9D%94%ED%95%9C-%EB%8B%A8%EC%96%B4/#_1","title":"\ubb38\uc81c","text":"<p>\ub9ac\ud2b8\ucf54\ub4dc 819\ubc88 \ubb38\uc81c\uc785\ub2c8\ub2e4.</p> <p>\ubb38\uc790\uc5f4 <code>paragraph</code>\uc640 \uae08\uc9c0\ub41c \ub2e8\uc5b4 \ubc30\uc5f4 <code>banned</code>\uac00 \uc8fc\uc5b4\uc9c8 \ub54c, \uae08\uc9c0\ub41c \ub2e8\uc5b4(<code>banned</code>)\uac00 \uc544\ub2cc \uac00\uc7a5 \ube48\ubc88\ud55c \ub2e8\uc5b4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uc801\uc5b4\ub3c4 \ud558\ub098\uc758 \uae08\uc9c0\ub41c \ub2e8\uc5b4\uac00 \uc544\ub2c8\uba70, \ub2f5\uc740 \uc720\uc77c\ud569\ub2c8\ub2e4.</p> <p><code>paragraph</code>\uc758 \ub2e8\uc5b4\ub294 \ub300\uc18c\ubb38\uc790\ub97c \uad6c\ubd84\ud558\uc9c0 \uc54a\uc73c\uba70, \ub2f5\uc740 \uc18c\ubb38\uc790\ub85c \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4.</p>","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\uce74\uc6b4\ud130"]},{"location":"blog/2024/10/19/819-%EA%B0%80%EC%9E%A5-%ED%9D%94%ED%95%9C-%EB%8B%A8%EC%96%B4/#_2","title":"\ud480\uc774","text":"<p>\uc5ed\uc2dc\ub098 \ud30c\uc774\uc368\ub2c8\uc2a4\ud0c0\ub77c\uba74 <code>collections.Counter</code>\ub97c \ub5a0\uc62c\ub838\uc744 \uac81\ub2c8\ub2e4.</p> <p>\uce5c\uc808\ud558\uac8c\ub3c4 <code>paragraph</code>\ub97c \uc18c\ubb38\uc790\ub85c \ubc18\ud658\ud558\uac8c \ud558\uc5ec \ub300\uc18c\ubb38\uc790\ub97c \uad6c\ubd84\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud588\uc2b5\ub2c8\ub2e4. \uac04\ub2e8\ud558\uac8c \ub2e4\uc74c\uacfc \uac19\uc774 \uc0dd\uac01\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <ol> <li><code>paragraph</code>\ub97c \uc18c\ubb38\uc790\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.</li> <li><code>paragraph</code>\ub97c \uc815\uaddc\uc2dd\uc744 \uc774\uc6a9\ud574 \ub2e8\uc5b4\ub85c \ubd84\ub9ac\ud569\ub2c8\ub2e4.</li> <li><code>banned</code>\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc740 \ub2e8\uc5b4\ub9cc \ud544\ud130\ub9c1\ud569\ub2c8\ub2e4.</li> <li><code>collections.Counter</code>\ub85c \ub2e8\uc5b4\uc758 \ube48\ub3c4\uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.</li> </ol> <p>import \uc0dd\ub7b5</p> <p>\ub9ac\ud2b8\ucf54\ub4dc \uc0ac\uc774\ud2b8\uc5d0\uc11c\ub294 <code>re</code>\uc640 <code>collections</code> \ubaa8\ub4c8\uc744 import\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub429\ub2c8\ub2e4. \uc0ac\uc774\ud2b8 \ub0b4\uc5d0\uc11c\ub294 \ubcf4\uc774\uc9c0 \uc54a\uc9c0\ub9cc \uc774\ubbf8 \uc790\uc8fc \uc4f0\uc774\ub294 \ubaa8\ub4c8\ub4e4\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.</p> <pre><code>class Solution:\n    def mostCommonWord(self, paragraph: str, banned: list[str]) -&gt; str:\n        words = [\n            w for w in re.findall(r\"\\w+\", paragraph.lower()) if w not in banned\n        ]\n        counter = Counter(words)\n        return counter.most_common(1)[0][0]\n</code></pre> \ud14c\uc2a4\ud2b8 \ucf54\ub4dc <pre><code>import re  # \ub9ac\ud2b8\ucf54\ub4dc\uc5d0\uc11c\ub294 \ubd88\ud544\uc694\nfrom collections import Counter  # \ub9ac\ud2b8\ucf54\ub4dc\uc5d0\uc11c \ubd88\ud544\uc694\n\nimport pytest\n\n\nclass Solution:\n    def mostCommonWord(self, paragraph: str, banned: list[str]) -&gt; str:\n        words = [\n            w for w in re.findall(r\"\\w+\", paragraph.lower()) if w not in banned\n        ]\n        counter = Counter(words)\n        return counter.most_common(1)[0][0]\n\n\n@pytest.mark.parametrize(\n    \"paragraph, banned, expected\",\n    [\n        (\"Bob hit a ball, the hit BALL flew far after it was hit.\", [\"hit\"], \"ball\"),\n        (\"a.\", [], \"a\"),\n        (\"Bob. hIt, baLl\", [\"bob\", \"hit\"], \"ball\"),\n    ],\n)\ndef test_solution(paragraph, banned, expected):\n    solution = Solution()\n    assert solution.mostCommonWord(paragraph, banned) == expected\n</code></pre> <p>1~3\ubc88 \uacfc\uc815\uc740 \ud55c \uc904\ub85c \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. <code>collections.Counter</code>\ub294 <code>most_common</code> \uba54\uc11c\ub4dc\ub97c \ud1b5\ud574 \uac00\uc7a5 \ube48\ubc88\ud55c \uc694\uc18c\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.</p> <p>\uc815\uaddc\uc2dd</p> <p>\uc815\uaddc\uc2dd <code>r\"\\w+\"</code>\uc740 \ub2e8\uc5b4\ub97c \ucc3e\ub294 \ud328\ud134\uc785\ub2c8\ub2e4. <code>\\w</code>\ub294 \ub2e8\uc5b4 \ubb38\uc790\ub97c \uc758\ubbf8\ud558\uba70, <code>+</code>\ub294 1\ud68c \uc774\uc0c1 \ubc18\ubcf5\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4.</p>","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\uce74\uc6b4\ud130"]},{"location":"blog/2024/10/19/819-%EA%B0%80%EC%9E%A5-%ED%9D%94%ED%95%9C-%EB%8B%A8%EC%96%B4/#_3","title":"\uc2dc\uac04 \ubcf5\uc7a1\ub3c4","text":"<p>\ubb38\uc790\uc5f4\uc744 \uc815\uaddc\uc2dd\uc744 \uc774\uc6a9\ud574 \ub2e8\uc5b4\ub85c \ubd84\ub9ac\ud558\uace0, <code>banned</code>\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc740 \ub2e8\uc5b4\ub9cc \ud544\ud130\ub9c1\ud558\ubbc0\ub85c \\(O(n)\\)\uc785\ub2c8\ub2e4.</p>","tags":["\ub9ac\ud2b8\ucf54\ub4dc","\uce74\uc6b4\ud130"]},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/%EB%A6%AC%ED%8A%B8%EC%BD%94%EB%93%9C/","title":"\ub9ac\ud2b8\ucf54\ub4dc","text":""}]}